version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout

      - run:
          name: Setting up Build Directories
          command: |
            mkdir ~/bin
            mkdir -p ~/android/lineage_17_1
            cd ~/android/lineage_17_1

      - run:
          name: Installing Dependencies from Apt
          command: |
            sudo apt-get update && sudo apt-get upgrade
            sudo apt install -y openjdk-11-jdk libwxgtk3.0-gtk3-dev jq bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev
            sudo apt install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev


      - run:
          name: Installing "repo" Tool and Git LFS
          command: |
            mkdir -p ~/.bin
            PATH="${HOME}/.bin:${PATH}"
            curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
            chmod a+rx ~/.bin/repo
            sudo apt install -y git-lfs
            git lfs install

      - run:
          name: Authenticating "repo" with GitHub Account
          command: |
            git config --global user.email "$GIT_USER_EMAIL"
            git config --global user.name "$GIT_USER_NAME"

      - run:
          name: Enabling Caching
          command: |
            export USE_CCACHE=1
            export CCACHE_EXEC=/usr/bin/ccache
            ccache -M 25G

      - run:
          name: Initializing Repo with LineageOS Source
          command: |
            cd ~/android/lineage_17_1
            PATH="${HOME}/.bin:${PATH}"
            repo init -u https://github.com/LineageOS/android.git -b lineage-17.1 --depth 1 --git-lfs

      - run:
          name: Syncing Repo with Optimizations
          command: |
            cd ~/android/lineage_17_1
            PATH="${HOME}/.bin:${PATH}"
            repo sync

      - run:
          name: Setting Up Samsung Device Tree
          command: |
            PATH="${HOME}/.bin:${PATH}"
            cd ~/android/lineage_17_1
            mkdir -p device/samsung
            git clone https://github.com/khushtaur3123/android_device_samsung_a7y18lte.git device/samsung/
            cd device/samsung
            
      - run:
          name: Setting Up Samsung Device Kernel
          command: |
            PATH="${HOME}/.bin:${PATH}"
            cd ~/android/lineage_17_1
            mkdir -p  kernel/samsung/universal7885
            git clone https://github.com/AKSharma87/kernel_samsung_a7y18lte.git  kernel/samsung/universal7885
            cd  kernel/samsung/universal7885

      - run:
          name: Setting Up Samsung Dependencies (SEPolicy)
          command: |
            PATH="${HOME}/.bin:${PATH}"
            cd ~/android/lineage_17_1
            mkdir -p device/samsung_slsi/sepolicy
            git clone -b lineage-17.1 https://github.com/LineageOS/android_device_samsung_slsi_sepolicy.git device/samsung_slsi/sepolicy
            cd device/samsung_slsi/sepolicy

      - run:
          name: Setting Up Samsung Dependencies (Hardware)
          command: |
            PATH="${HOME}/.bin:${PATH}"
            cd ~/android/lineage_17_1
            mkdir -p hardware/samsung
            git clone -b lineage-17.1 https://github.com/LineageOS/android_hardware_samsung.git hardware/samsung
            cd hardware/samsung

      - run:
          name: Setting Up Samsung Dependencies (NFC)
          command: |
            PATH="${HOME}/.bin:${PATH}"
            cd ~/android/lineage_17_1
            mkdir -p hardware/samsung/nfc
            git clone -b lineage-17.1 https://github.com/LineageOS/android_hardware_samsung_nfc.git hardware/samsung/nfc
            cd hardware/samsung/nfc

      - run:
          name: Setting Up Samsung Dependencies (Bluetooth)
          command: |
            PATH="${HOME}/.bin:${PATH}"
            cd ~/android/lineage_17_1
            mkdir -p hardware/samsung_slsi/libbt
            git clone -b lineage-17.1 https://github.com/LineageOS/android_hardware_samsung_slsi_libbt.git hardware/samsung_slsi/libbt
            cd hardware/samsung_slsi/libbt

      - run:
          name: Setting Up Samsung Dependencies (Wi-Fi HAL)
          command: |
            PATH="${HOME}/.bin:${PATH}"
            cd ~/android/lineage_17_1
            mkdir -p hardware/samsung_slsi/scsc_wifibt/wifi_hal
            git clone -b lineage-17.1 https://github.com/LineageOS/android_hardware_samsung_slsi_scsc_wifibt_wifi_hal.git hardware/samsung_slsi/scsc_wifibt/wifi_hal
            cd hardware/samsung_slsi/scsc_wifibt/wifi_hal

      - run:
          name: Setting Up Samsung Dependencies (slsi_scsc_wifibt_wpa_supplicant_lib)
          command: |
            PATH="${HOME}/.bin:${PATH}"
            cd ~/android/lineage_17_1
            mkdir -p hardware/samsung_slsi/scsc_wifibt/wpa_supplicant_lib
            git clone -b lineage-17.1 https://github.com/LineageOS/android_hardware_samsung_slsi_scsc_wifibt_wpa_supplicant_lib.git hardware/samsung_slsi/scsc_wifibt/wpa_supplicant_lib
            cd hardware/samsung_slsi/scsc_wifibt/wpa_supplicant_lib
      
      - run:
          name: Setting Up Samsung Vendor Tree
          command: |
            PATH="${HOME}/.bin:${PATH}"
            cd ~/android/lineage_17_1
            mkdir -p vendor/samsung
            git clone https://github.com/khushtaur3123/android_vendor_samsung_a7y18lte.git vendor/samsung/
            cd vendor/samsung

      - run:
          name: Setting Up Build Environment
          command: |
            cd ~/android/lineage_17_1
            PATH="${HOME}/.bin:${PATH}"
            repo sync
            source build/envsetup.sh
            breakfast a7y18lte

      - run:
          name: Starting Build Process
          command: |
            cd ~/android/lineage_17_1
            source build/envsetup.sh
            brunch a7y18lte

      - run:
          name: Get current time
          command: echo "export CURRENT_TIME=$(date +'%D-%M-%Y')" >> $BASH_ENV

      - run:
          name: Create GitHub Release and Upload Assets
          command: |
            RELEASE_RESPONSE=$(curl --data \
              '{
                "tag_name": "v1.0",
                "name": "Auto Build '$CURRENT_TIME'",
                "body": "This is an Automatic Release by CircleCI.",
                "prerelease": false
              }' \
              -H "Authorization: token $GITHUB_TOKEN" \
              -X POST https://api.github.com/repos/DeadPool-4422/lineageos_actions_a7y18lte/releases)

            UPLOAD_URL=$(echo $RELEASE_RESPONSE | jq -r .upload_url | sed -e "s/{?name,label}//")

            # Error check
            if [[ "$UPLOAD_URL" == "null" ]]; then
              echo "Failed to create a release. Exiting..."
              exit 1
            fi

            curl -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: $(file -b --mime-type $OUT/recovery.img)" \
              --data-binary "@$OUT/recovery.img" \
              "$UPLOAD_URL?name=recovery.img"

            ZIP_PATH=$(ls $OUT/lineage-*-a7y18lte.zip)

            curl -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: $(file -b --mime-type $ZIP_PATH)" \
              --data-binary "@$ZIP_PATH" \
              "$UPLOAD_URL?name=lineage-a7y18lte.zip"

workflows:
  version: 2
  build_and_release:
    jobs:
      - build
